---
swagger: "2.0"
info:
  description: "A sample API that uses a petstore as an example to demonstrate features\
    \ in the swagger-2.0 specification"
  version: "1.0.0"
  title: "Swagger Petstore (Simple)"
  termsOfService: "http://helloreverb.com/terms/"
  contact:
    name: "Swagger API team"
    url: "http://swagger.io"
    email: "foo@example.com"
  license:
    name: "MIT"
    url: "http://opensource.org/licenses/MIT"
host: "petstore.swagger.io"
basePath: "/api"
schemes:
- "http"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /criminals:
    get:
      operationId: "findCriminal"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "tags"
        in: "query"
        description: "tags to filter by"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      - name: "limit"
        in: "query"
        description: "maximum number of results to return"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "Criminal response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/criminal"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    post:
      operationId: "addCriminal"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "criminal"
        description: "criminal to add to the store"
        required: true
        schema:
          $ref: "#/definitions/newCriminal"
      responses:
        200:
          description: "criminal response"
          schema:
            $ref: "#/definitions/criminal"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
  /criminals/{id}:
    get:
      operationId: "findCriminalById"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of criminal to fetch"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "criminal response"
          schema:
            $ref: "#/definitions/criminal"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
    delete:
      operationId: "deleteCriminalById"
      produces:
      - "application/json"
      - "application/xml"
      - "text/xml"
      - "text/html"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of criminal to fetch"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "criminal response"
          schema:
            $ref: "#/definitions/criminal"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/errorModel"
      x-swagger-router-controller: "Default"
definitions:
  criminal:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
        uniqueItems: true
      name:
        type: "string"
  newCriminal:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  errorModel:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
